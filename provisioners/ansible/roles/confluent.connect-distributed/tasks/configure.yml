---
- name: connect distributed create group
  group:
    name: "{{ kafka.connect.distributed.group }}"

- name: connect distributed create user
  user:
    name: "{{ kafka.connect.distributed.user }}"
    comment: "Connect Distributed User"
    system: yes
    group: "{{ kafka.connect.distributed.group }}"

- name: create connect log directory
  file:
    path: /var/log/connect
    state: directory
    mode: 0755
    owner: "{{ kafka.connect.distributed.user }}"
    group: "{{ kafka.connect.distributed.group }}"

- name: update the krb5.conf config file
  template:
    src: templates/krb5.conf.j2
    dest: /etc/krb5.conf
    owner: root
    group: root
    mode: 0644

- name: copy systemd service file
  template:
    src: connect.service.j2
    dest: "{{ kafka.connect.distributed.systemd_config_file }}"
    owner: root
    group: root
    mode: 0644

- name: copy modified connect script
  copy: src=connect-distributed dest="{{ kafka.connect.distributed.start_class }}"

- name: copy systemd environment file
  template:
    src: connect-env.j2
    dest: "{{ kafka.connect.distributed.systemd_env_file }}"
    mode: 0640
    owner: "{{ kafka.connect.distributed.user }}"
    group: "{{ kafka.connect.distributed.group }}"

- name: connect distributed create config
  template:
    src: connect-distributed.properties.j2
    dest: "{{ kafka.connect.distributed.config_file }}"
    mode: 0640
    owner: "{{ kafka.connect.distributed.user }}"
    group: "{{ kafka.connect.distributed.group }}"
  when: security_mode == "plaintext"
  notify:
    - restart connect

- name: connect distributed create config
  template:
    src: connect-distributed_ssl.properties.j2
    dest: "{{ kafka.connect.distributed.config_file }}"
    mode: 0640
    owner: "{{ kafka.connect.distributed.user }}"
    group: "{{ kafka.connect.distributed.group }}"
  when: security_mode == "ssl"
  notify:
    - restart connect

- name: connect distributed create config
  template:
    src: connect-distributed_sasl_ssl.properties.j2
    dest: "{{ kafka.connect.distributed.config_file }}"
    mode: 0640
    owner: "{{ kafka.connect.distributed.user }}"
    group: "{{ kafka.connect.distributed.group }}"
  when: security_mode == "sasl_ssl"
  notify:
    - restart connect

- name: broker sasl_ssl JAAS config
  template:
    src: connect_jaas.j2
    dest: "{{ kafka.connect.distributed.jaas_config_file }}"
    mode: 0640
    owner: "{{ kafka.connect.distributed.user }}"
    group: "{{ kafka.connect.distributed.group }}"
  when: security_mode == "sasl_ssl"

- name: copy log4j config
  template:
    src: connect-log4j.properties.j2
    dest: "{{ kafka.connect.distributed.log4j_config_file }}"
    mode: 0640
    owner: "{{ kafka.connect.distributed.user }}"
    group: "{{ kafka.connect.distributed.group }}"

- name: connect distributed configure service
  systemd:
    name: "{{ kafka.connect.distributed.service_name }}"
    enabled: "{{ kafka.connect.distributed.systemd.enabled }}"
    state: "{{ kafka.connect.distributed.systemd.state }}"

- name: Reload the systemd deamon with changes
  systemd:
    daemon_reload: yes
  notify:
    - restart connect
